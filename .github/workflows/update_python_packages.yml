# This is a basic workflow to help you get started with Actions

name: Update Python dependencies

# Controls when the action will run.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install Python dependencies
        run: poetry install --no-interaction --no-root

      - name: Update Poetry dependencies
        run: poetry update

      - name: Check for changes to poetry.lock
        id: check-poetry-lock
        uses: tj-actions/verify-changed-files@v9.2
        with:
          files: poetry.lock

      - name: Create PR if changes were detected
        if: check-poetry-lock.outputs.files_changed == 'true'
        uses: peter-evans/create-pull-request@v4

      - name: Build frontend
        run: |
          cd ./frontend
          yarn --network-timeout 500000
          $env:CI="false"
          yarn build
          Copy-Item -r .\build ..\tauntaun_live_editor\data\client

      - name: Build binaries
        run: poetry run python -m PyInstaller --noconfirm tauntaun_live_editor.spec

      #      - name: Compress
      #        run: |
      #          cd ./dist
      #          Compress-Archive -Path .\tauntaun_live_editor -DestinationPath "tauntaun_live_editor.zip" -Compression Optimal

      - uses: actions/upload-artifact@v2
        with:
          name: tauntaun_live_editor
          path: dist/tauntaun_live_editor
